name: Packer

on:
  push:
    branches: [ main ]

jobs:

  packer:
    runs-on: ubuntu-latest
    name: build-app-packer
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Test with Maven
        run: mvn test

#      - name: Checkout Repository
#        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ROOT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ROOT_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Validate Template
        working-directory: ./packer
        run: packer validate aws-ubuntu.pkr.hcl
        # build artifact
      - name: Build Artifact
        working-directory: ./packer
        run: packer build aws-ubuntu.pkr.hcl
        env:
          PACKER_LOG: 1
      - name: Retrieve AMI ID
        run: |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2) >> $GITHUB_ENV
          echo $AMI_ID
      - name: Creating launch template
        run: |
          aws ec2 create-launch-template-version --launch-template-name vpcTest1-launch-template --source-version 1 --launch-template-data '{"ImageId":"${{ env.AMI_ID}}"}'

      - name: Updating ASG
        run: |
          aws autoscaling update-auto-scaling-group --auto-scaling-group-name vpcTest1-launch-template --launch-template LaunchTemplateId=${{ secrets.AWS_LAUNCH_TEMPLATE_ID }},Version='$Latest'

      - name: Refreshing Instance
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name vpcTest1-ASG-root